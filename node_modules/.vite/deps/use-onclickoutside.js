import {
  require_react
} from "./chunk-35JCXRXW.js";
import {
  __toESM
} from "./chunk-NKHIPFFU.js";

// ../node_modules/use-onclickoutside/dist/use-onclickoutside.browser.esm.js
var import_react2 = __toESM(require_react());

// ../node_modules/are-passive-events-supported/dist/are-passive-events-supported.esm.browser.js
var supportsPassiveEvents;
function arePassiveEventsSupported() {
  if (supportsPassiveEvents !== void 0) {
    return supportsPassiveEvents;
  }
  var passive = false;
  var options = {
    get passive() {
      passive = true;
    }
  };
  var noop = function noop2() {
  };
  window.addEventListener("t", noop, options);
  window.removeEventListener("t", noop, options);
  supportsPassiveEvents = passive;
  return passive;
}
var are_passive_events_supported_esm_browser_default = arePassiveEventsSupported;

// ../node_modules/use-latest/dist/use-latest.esm.js
var React = __toESM(require_react());

// ../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js
var import_react = __toESM(require_react());
var index = import_react.useLayoutEffect;
var use_isomorphic_layout_effect_browser_esm_default = index;

// ../node_modules/use-latest/dist/use-latest.esm.js
var useLatest = function useLatest2(value) {
  var ref = React.useRef(value);
  use_isomorphic_layout_effect_browser_esm_default(function() {
    ref.current = value;
  });
  return ref;
};

// ../node_modules/use-onclickoutside/dist/use-onclickoutside.browser.esm.js
var MOUSEDOWN = "mousedown";
var TOUCHSTART = "touchstart";
var events = [MOUSEDOWN, TOUCHSTART];
var getAddOptions = function getAddOptions2(event) {
  if (event === TOUCHSTART && are_passive_events_supported_esm_browser_default()) {
    return {
      passive: true
    };
  }
};
var currentDocument = document;
function useOnClickOutside(ref, handler, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$document = _ref.document, document2 = _ref$document === void 0 ? currentDocument : _ref$document;
  var handlerRef = useLatest(handler);
  (0, import_react2.useEffect)(function() {
    if (!handler) {
      return;
    }
    var listener = function listener2(event) {
      if (!ref.current || !handlerRef.current || ref.current.contains(event.target)) {
        return;
      }
      handlerRef.current(event);
    };
    events.forEach(function(event) {
      document2.addEventListener(event, listener, getAddOptions(event));
    });
    return function() {
      events.forEach(function(event) {
        document2.removeEventListener(event, listener);
      });
    };
  }, [!handler]);
}

// dep:use-onclickoutside
var use_onclickoutside_default = useOnClickOutside;
export {
  use_onclickoutside_default as default
};
//# sourceMappingURL=use-onclickoutside.js.map
